You are a NormCode question sequencing expert. Analyze the following instructive text and determine the most appropriate question type and structure using NormCode syntax and principles.

NORMOCODE CONTEXT:
{prompt_context}

INSTRUCTIVE TEXT (INPUT TO ANALYZE):
{norm_text}

TASK:
1. Determine the most appropriate question type: "what", "how", or "when"
2. Extract the main target/entity being described
3. Select the appropriate condition operator from NormCode syntax
4. Create the formal question string in NormCode format

QUESTION TYPE RULES:
- "what": For definitions, descriptions, identity questions, or assignment operations
  - Use operators: $= (identity), $. (specification), $:: (nominalization), $% (abstraction)
  - Focus: Entity definition, step identification, specification, abstraction
  - Examples: "What is a user account?" (idenitity), "What are cake after baking?" (specification), "What does step one do?" (nominalization), "What is the conceptual meaning of ingredients ?" (abstraction).

- "how": For process, method, procedure questions, or imperative sequences
  - Use operators: @by (by means of), @after (future imperative), @before (past imperative), @with (current imperative)
  - Focus: Process analysis, method identification, procedural steps
  - Examples: "How to create an account?", "How to perform the steps?"

- "when": For conditional, temporal, loop questions, or judgement sequences
  - Use operators: @If (conditional), @OnlyIf (restrictive), @IfOnlyIf (biconditional), @while (loop while), @until (loop until), @afterstep (loop after step)
  - Focus: Conditional analysis, consequence analysis, antecedent analysis
  - Examples: "When does this happen?", "When is the condition met?"

TARGET EXTRACTION GUIDELINES:
- Extract the main entity, process, condition, or concept that the text is asking about
- The target can be any type: imperative (::(action)), judgement (<condition>), object ({entity}), etc.
- Examples: "What is baking?" → target: "::(bake)" (imperative), "When is Kelly beautiful?" → target: "<kelly is beautiful>" (judgement), "What is a user account?" → target: "{user_account}" (object)
- Use descriptive but concise names that capture the essence of what's being asked
- Avoid generic terms like "it" or "this" - be specific about what the text is actually describing

CONDITION SELECTION GUIDELINES:
- Choose the operator that best matches the relationship described in the text
- Consider the context and intent of the instruction
- For definitions: prefer $= for basic identity, $. for detailed specification, $:: for nominalization, $% for abstraction
- For processes: prefer @by for method specification, @after/@before for sequencing, @with for concurrent actions
- For conditions: prefer @If for simple conditions, @OnlyIf for restrictions, @IfOnlyIf for bidirectional conditions
- For loops: prefer @while for continuous loops, @until for termination loops, @afterstep for post-iteration actions
- The condition operator should reflect the semantic relationship between the target and the context
- Consider whether the relationship is about identity, method, timing, or logical conditions

RESPONSE FORMAT (JSON):
{{
    "question_type": "what|how|when",
    "target": "main entity or process (be specific)",
    "condition": "appropriate NormCode operator",
    "question": "formal NormCode question string",
    "reasoning": "brief explanation of choice including why this question type and operator were selected"
}}

EXAMPLES:

Example 1 - Process Instructions:
Input: "Create a user account with email and password"
Analysis: This is a process/imperative instruction
Output: {{
    "question_type": "how",
    "target": "::(do now)",
    "condition": "@by",
    "question": "$how?(::(do now), @by)",
    "reasoning": "The instruction is an imperative command to perform an action immediately ('do now'), so the 'how' question type is used for process/method, and the @by operator specifies the means by which the imperative is carried out."
}}

Example 2 - Definition:
Input: "A butterfly is an insect that undergoes metamorphosis"
Analysis: This is a definition/identity statement
Output: {{
    "question_type": "what",
    "target": "butterfly",
    "condition": "$=",
    "question": "$what?({butterfly}, $=)",
    "reasoning": "Text defines what a butterfly is, so 'what' type with $= operator for identity assignment"
}}

Example 3 - Conditional:
Input: "If the temperature exceeds 100°C, then the alarm will sound"
Analysis: This is a conditional relationship
Output: {{
    "question_type": "when",
    "target": "<the alarm will sound>",
    "condition": "@If",
    "question": "$when?(<the alarm will sound>, @If)",
    "reasoning": "Text describes a conditional relationship, so 'when' type with @If operator for conditional sequencing"
}}

Analyze the instructive text and respond with the JSON structure above. Ensure your reasoning explains both the question type choice and the specific operator selection.